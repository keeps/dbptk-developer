/**
 * The contents of this file are subject to the license and copyright
 * detailed in the LICENSE file at the root of the source
 * tree and available online at
 *
 * https://github.com/keeps/db-preservation-toolkit
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.21 at 01:32:34 PM CEST 
//

package dk.sa.xmlns.diark._1_0.tableindex;

import jakarta.xml.bind.annotation.XmlRegistry;

/**
 * This object contains factory methods for each Java content interface and Java
 * element interface generated in the dk.sa.xmlns.diark._1 package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the
 * Java representation for XML content. The Java representation of XML content
 * can consist of schema derived interfaces and classes representing the binding
 * of schema type definitions, element declarations and model groups. Factory
 * methods for each of these are provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

  /**
   * Create a new ObjectFactory that can be used to create new instances of schema
   * derived classes for package: dk.sa.xmlns.diark._1
   * 
   */
  public ObjectFactory() {
  }

  /**
   * Create an instance of {@link SiardDiark }
   * 
   */
  public SiardDiark createSiardDiark() {
    return new SiardDiark();
  }

  /**
   * Create an instance of {@link TablesType }
   * 
   */
  public TablesType createTablesType() {
    return new TablesType();
  }

  /**
   * Create an instance of {@link ViewsType }
   * 
   */
  public ViewsType createViewsType() {
    return new ViewsType();
  }

  /**
   * Create an instance of {@link TableType }
   * 
   */
  public TableType createTableType() {
    return new TableType();
  }

  /**
   * Create an instance of {@link ViewType }
   * 
   */
  public ViewType createViewType() {
    return new ViewType();
  }

  /**
   * Create an instance of {@link ColumnsType }
   * 
   */
  public ColumnsType createColumnsType() {
    return new ColumnsType();
  }

  /**
   * Create an instance of {@link ColumnType }
   * 
   */
  public ColumnType createColumnType() {
    return new ColumnType();
  }

  /**
   * Create an instance of {@link PrimaryKeyType }
   * 
   */
  public PrimaryKeyType createPrimaryKeyType() {
    return new PrimaryKeyType();
  }

  /**
   * Create an instance of {@link ForeignKeysType }
   * 
   */
  public ForeignKeysType createForeignKeysType() {
    return new ForeignKeysType();
  }

  /**
   * Create an instance of {@link ForeignKeyType }
   * 
   */
  public ForeignKeyType createForeignKeyType() {
    return new ForeignKeyType();
  }

  /**
   * Create an instance of {@link ReferenceType }
   * 
   */
  public ReferenceType createReferenceType() {
    return new ReferenceType();
  }

}
